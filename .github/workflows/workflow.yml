name: Build

on:
  push:
    branches:
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+**

  pull_request:

  workflow_dispatch:

  schedule:
    - cron: '30 0 * * 1'

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    env:
      docker_image: jk4ger/gitstats
      docker_cache_in: /tmp/.buildx-cache
      docker_cache_out: /tmp/.buildx-cache-new

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Determine metadata for Docker image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{env.docker_image}}
          # type=semver is only active on workflow trigger "push".
          # It will automatically add the tag "latest" on release tags (e.g. "v1.2.3", not on "v1.2.3-rc.1").
          # We always move the tag "latest-dev" to every new image.
          tags: |
            type=raw,value=latest-dev
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}
            type=semver,pattern=v{{major}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern={{raw}}
            type=sha
            type=sha,format=long
          labels: |
            org.opencontainers.image.title=git-stats
            org.opencontainers.image.authors=Jens Kager <jens.kager@gmail.com>
            org.opencontainers.image.version=${{github.ref_name}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Allows re-using the build cache across workflow runs.
      - name: Restore Docker build cache
        uses: actions/cache@v3
        with:
          path: ${{env.docker_cache_in}}
          key: docker-build-cache-${{github.sha}}
          restore-keys: docker-build-cache

      - name: Build/push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{github.event_name == 'push' && github.ref_type == 'tag'}}
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
          cache-from: type=local,src=${{env.docker_cache_in}}
          cache-to: type=local,mode=max,dest=${{env.docker_cache_out}}
